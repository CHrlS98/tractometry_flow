process {
    tag={ "${sid} - ${bname}" }
    publishDir={"./results_tractometry/$sid/$task.process"}
    scratch=true
    errorStrategy='retry'
    maxRetries=1
    stageInMode='copy'
    stageOutMode='rsync'
    afterScript='sleep 1'
}

params {
    nb_points=20
    use_provided_centroids=false

    colors=[
        'cc_m':     '0xcc0000',
        'laf_m':     '0xffdf0f',
        'raf_m':     '0x02d983',
        'lpt_m':    '0x0d6cbf',
        'rpt_m':    '0xbf0099',
    ]

    mean_std_density_weighting=true
    mean_std_per_point_density_weighting=true
    endpoints_metric_stats_normalize_weights=true
    voxel_label_map_upsample=1

    skip_pruning=false
    skip_outlier_rejection=true

    statsPublishDir="./results_tractometry/Statistics"
    plotPublishDir="./results_tractometry/Plots"

    processes=false
}

if(params.processes) {
    if(params.processes > Runtime.runtime.availableProcessors()) {
        throw new RuntimeException("Number of processes higher than available CPUs.")
    }
    else if(params.processes < 1) {
        throw new RuntimeException("When set, number of processes must be >= 1 " +
                                   "and smaller or equal to the number of CPUs.")
    }
    else {
        executor.$local.cpus=params.processes
    }
}

singularity.autoMounts=true

profiles {
    macos {
            process.scratch="/tmp"
    }
}
